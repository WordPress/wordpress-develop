##
# DEPRECATED
#
# A reusable workflow that runs the PHPUnit test suite with the specified configuration.
#
# This workflow is used by branches 4.1 through 5.1.
##
name: Run PHPUnit tests

on:
  workflow_call:
    inputs:
      os:
        description: 'Operating system to run tests on'
        required: false
        type: 'string'
        default: 'ubuntu-latest'
      php:
        description: 'The version of PHP to use, in the format of X.Y'
        required: true
        type: 'string'
      phpunit:
        description: 'The PHPUnit version to use when running tests. See .env for details about valid values.'
        required: false
        type: 'string'
        default: ${{ inputs.php }}-fpm
      multisite:
        description: 'Whether to run tests as multisite'
        required: false
        type: 'boolean'
        default: false
      split_slow:
        description: 'Whether to run slow tests group.'
        required: false
        type: 'boolean'
        default: false
      memcached:
        description: 'Whether to test with memcached enabled'
        required: false
        type: 'boolean'
        default: false
      phpunit-config:
        description: 'The PHPUnit configuration file to use'
        required: false
        type: 'string'
        default: 'phpunit.xml.dist'
      allow-errors:
        description: 'Whether to continue when test errors occur.'
        required: false
        type: boolean
        default: false
env:
  LOCAL_PHP: ${{ inputs.php }}-fpm
  LOCAL_PHPUNIT: ${{ inputs.phpunit && inputs.phpunit || inputs.php }}-fpm
  LOCAL_PHP_MEMCACHED: ${{ inputs.memcached }}
  PHPUNIT_CONFIG: ${{ inputs.phpunit-config }}
  PHPUNIT_SCRIPT: php
  PUPPETEER_SKIP_DOWNLOAD: ${{ true }}
  SLOW_TESTS: 'external-http,media'

jobs:
  # Runs the PHPUnit tests for WordPress.
  #
  # Performs the following steps:
  # - Sets environment variables.
  # - Sets up the environment variables needed for testing with memcached (if desired).
  # - Installs NodeJS.
  # - Build WordPress
  # _ Installs npm dependencies.
  # - Configures caching for Composer.
  # _ Installs Composer dependencies (if desired).
  # - Logs Docker debug information (about the Docker installation within the runner).
  # - Starts the WordPress Docker container.
  # - Starts the Memcached server after the Docker network has been created (if desired).
  # - Logs general debug information about the runner.
  # - Logs the running Docker containers.
  # - Logs debug information from inside the WordPress Docker container.
  # - Logs debug information about what's installed within the WordPress Docker containers.
  # - Install WordPress within the Docker container.
  # - Run the PHPUnit tests.
  test-php:
    name: PHP ${{ inputs.php }} / ${{ inputs.multisite && ' Multisite' || 'Single site' }}${{ inputs.split_slow && ' slow tests' || '' }}${{ inputs.memcached && ' with memcached' || '' }}
    runs-on: ${{ inputs.os }}
    timeout-minutes: 20

    steps:
      - name: Configure environment variables
        run: |
          echo "PHP_FPM_UID=$(id -u)" >> $GITHUB_ENV
          echo "PHP_FPM_GID=$(id -g)" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          show-progress: ${{ runner.debug == '1' && 'true' || 'false' }}

      - name: Set up Node.js
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Build WordPress
        run: npm run build

      - name: Cache Composer dependencies
        if: ${{ env.COMPOSER_INSTALL == true }}
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        env:
          cache-name: cache-composer-dependencies
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ inputs.php }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer dependencies
        if: ${{ env.COMPOSER_INSTALL == true }}
        run: |
          docker compose run --rm php composer --version
          docker compose run --rm php composer install

      - name: Docker debug information
        run: |
          docker -v
          docker compose -v

      - name: Start Docker environment
        run: |
          npm run env:start

      # The memcached server needs to start after the Docker network has been set up with `npm run env:start`.
      - name: Start the Memcached server.
        if: ${{ inputs.memcached }}
        run: |
          cp tests/phpunit/includes/object-cache.php build/wp-content/object-cache.php
          docker run --name memcached --net $(basename "$PWD")_wpdevnet -d memcached

      - name: General debug information
        run: |
          npm --version
          node --version
          curl --version
          git --version
          svn --version

      - name: Log running Docker containers
        run: docker ps -a

      - name: WordPress Docker container debug information
        run: |
          docker compose run --rm mysql mysql --version
          docker compose run --rm php php --version
          docker compose run --rm php php -m
          docker compose run --rm php php -i
          docker compose run --rm php locale -a

      - name: Install WordPress
        run: npm run env:install

      - name: Run slow PHPUnit tests
        if: ${{ inputs.split_slow }}
        run: npm run test:${{ env.PHPUNIT_SCRIPT }} -- --verbose -c ${{ env.PHPUNIT_CONFIG }} --group ${{ env.SLOW_TESTS }}

      - name: Run PHPUnit tests for single site excluding slow tests
        if: ${{ inputs.php < '7.0' && ! inputs.split_slow && ! inputs.multisite }}
        run: npm run test:${{ env.PHPUNIT_SCRIPT }} -- --verbose -c ${{ env.PHPUNIT_CONFIG }} --exclude-group ${{ env.SLOW_TESTS }},ajax,ms-files,ms-required

      - name: Run PHPUnit tests for Multisite excluding slow tests
        if: ${{ inputs.php < '7.0' && ! inputs.split_slow && inputs.multisite }}
        run: npm run test:${{ env.PHPUNIT_SCRIPT }} -- --verbose -c ${{ env.PHPUNIT_CONFIG }} --exclude-group ${{ env.SLOW_TESTS }},ajax,ms-files,ms-excluded,oembed-headers

      - name: Run PHPUnit tests
        if: ${{ inputs.php >= '7.0' }}
        run: npm run test:${{ env.PHPUNIT_SCRIPT }} -- --verbose -c ${{ env.PHPUNIT_CONFIG }}

      - name: Run AJAX tests
        if: ${{ ! inputs.multisite && ! inputs.split_slow }}
        run: npm run test:${{ env.PHPUNIT_SCRIPT }} -- --verbose -c ${{ env.PHPUNIT_CONFIG }} --group ajax

      - name: Run external HTTP tests
        if: ${{ ! inputs.multisite && ! inputs.split_slow }}
        run: npm run test:${{ env.PHPUNIT_SCRIPT }} -- --verbose -c phpunit.xml.dist --group external-http
